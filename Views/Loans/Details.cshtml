@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model library_management_system.Models.Loan

@{
	ViewData["lang"] = System.Globalization.CultureInfo.CurrentCulture.Name;
	ViewData["Title"] = Localizer["Loan Details"];
	ViewData["ActiveNav"] = "Loans";
}

<div class="mb-3 row align-items-center">
	<h1 class="display-4 col-12 col-md-4">@Localizer["Loan Details"]</h1>
	<div class="col-12 col-md-8 text-md-end">
		@if (@Model.ReturnDate == null)
		{
			<a class="btn @("true".Equals(ViewData["IsNewLoan"]) ? "btn-outline-primary" : "btn-primary") mb-2 ms-2"
				asp-controller="Loans" asp-action="Return" asp-route-loanId="@Model.ID"><i
					class="bi bi-calendar-check me-2"></i> @Localizer["Mark as returned"]</a>
		}

		<a class="d-none d-lg-inline-block btn @("true".Equals(ViewData["IsNewLoan"]) ? "btn-primary" : "btn-outline-primary") mb-2 ms-2"
			asp-controller="Books" asp-action="Search" asp-route-loanId="@Model.ID"><i class="bi bi-book me-2"></i>
			@Localizer["Add Book"]</a>

		<div class="dropdown d-inline-block align-top mb-2 ms-2" role="menu">
			<button
				class="btn @("true".Equals(ViewData["IsNewLoan"]) ? "btn-primary" : "btn-outline-primary") dropdown-toggle"
				type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="@Localizer["Add Item"]">
				<i class="bi bi-cart-plus" data-bs-toggle="tooltip" data-bs-offset="0,10" data-bs-title="@Localizer["Add Item"]"></i>
			</button>
			<ul class="dropdown-menu">
				<li class="d-lg-none"><a class="dropdown-item" asp-controller="Books" asp-action="Search" asp-route-loanId="@Model.ID"><i
							class="bi bi-book me-2"></i> @Localizer["Add Book"]</a></li>

				<li><a class="dropdown-item" asp-controller="Movies" asp-action="Search" asp-route-loanId="@Model.ID"><i
							class="bi bi-film me-2"></i> @Localizer["Add Movie"]</a></li>

				<li><a class="dropdown-item" asp-controller="MusicDiscs" asp-action="Search" asp-route-loanId="@Model.ID"><i
							class="bi bi-disc me-2"></i> @Localizer["Add Music Disc"]</a></li>
			</ul>
		</div>

		<div class="dropdown d-inline-block align-top mb-2 ms-2" role="menu">
			<button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown"
				aria-expanded="false" aria-label="@Localizer["More Operations"]">
				<i class="bi bi-three-dots" data-bs-toggle="tooltip" data-bs-offset="0,10" data-bs-title="@Localizer["More Operations"]"></i>
			</button>
			<ul class="dropdown-menu">
				<li><a class="dropdown-item" asp-controller="Loans" asp-action="Edit" asp-route-loanId="@Model.ID"><i
							class="bi bi-calendar-week me-2"></i> @Localizer["Edit Dates"]</a></li>

				<li><a class="dropdown-item text-danger" asp-controller="Loans" asp-action="ChooseLoanItems" asp-route-loanId="@Model.ID"><i
							class="bi bi-journal-minus me-2"></i> @Localizer["Remove Items from Loan"]</a></li>

				<li><button type="submit" class="dropdown-item text-danger" form="delete-loan-form"><i
							class="bi bi-trash me-2"></i> @Localizer["Delete Loan"]</button>
				</li>
			</ul>
		</div>
	</div>
</div>

@switch (ViewData["PreviousAction"])
{
    case "Update":
        <div class="p-2 mb-5 border rounded-3 border-success bg-success-subtle">
            @Localizer["Loan updated"]
        </div>
        break;
    case "Return":
        <div class="p-2 mb-5 border rounded-3 border-success bg-success-subtle">
            @Localizer["Loan marked as returned"]
        </div>
        break;
    case "DeleteItems":
        <div class="p-2 mb-5 border rounded-3 border-danger bg-danger-subtle">
            @Localizer["Items removed from loan"]
        </div>
        break;
}

<div class="row mb-5">
	<div class="col-12 col-md-8">
		<div class="row">
			<div class="col-4">@Html.DisplayNameFor(model => model.LoanDate):</div>
			<div class="col-8">@Html.DisplayFor(model => model.LoanDate)</div>
		</div>
		<div class="row mt-3">
			<div class="col-4">@Html.DisplayNameFor(model => model.DueDate):</div>
			<div class="col-8">@Html.DisplayFor(model => model.DueDate)</div>
		</div>
		@if (@Model.ReturnDate != null)
		{
			<div class="row mt-3">
				<div class="col-4">@Html.DisplayNameFor(model => model.ReturnDate):</div>
				<div class="col-8">@Html.DisplayFor(model => model.ReturnDate)</div>
			</div>
		}
	</div>
</div>

<div class="mb-3">
	<h2 class="display-5 mb-0">@Localizer["Books"]</h2>
</div>

@if (Model.LoanBooks.Count == 0)
{
	<p class="mb-5">@Localizer["No books have been loaned."]</p>
}
else
{
	<div class="table-responsive mb-5">
		<table class="table table-hover">
			<thead>
				<tr>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanBooks.First().Book!.Title)</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanBooks.First().Book!.Author)</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanBooks.First().Book!.ISBN_10)</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var loanBook in Model.LoanBooks.OrderBy(lb => lb.Book!.Title))
				{
					<tr>
						<td>@Html.DisplayFor(model => loanBook.Book!.Title)</td>
						<td>@Html.DisplayFor(model => loanBook.Book!.Author)</td>
						<td>@Html.DisplayFor(model => loanBook.Book!.ISBN_10)</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

<div class="mb-3">
	<h2 class="display-5 mb-0">@Localizer["Movies"]</h2>
</div>

@if (Model.LoanMovies.Count == 0)
{
	<p class="mb-5">@Localizer["No movies have been loaned."]</p>
}
else
{
	<div class="table-responsive mb-5">
		<table class="table table-hover">
			<thead>
				<tr>
					<th scope="col">@Localizer["Title"]</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanMovies.First().Movie!.Director)</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanMovies.First().Movie!.ReleaseYear)</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var loanMovie in Model.LoanMovies.OrderBy(lm => lm.Movie!.Title))
				{
					<tr>
						<td>@("fr".Equals(ViewData["lang"]) ? loanMovie.Movie!.TitleFr ?? loanMovie.Movie!.Title :
												loanMovie.Movie!.Title)</td>
						<td>@Html.DisplayFor(model => loanMovie.Movie!.Director)</td>
						<td>@Html.DisplayFor(model => loanMovie.Movie!.ReleaseYear)</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

<div class="mb-3">
	<h2 class="display-5 mb-0">@Localizer["Music Discs"]</h2>
</div>

@if (Model.LoanMusicDiscs.Count == 0)
{
	<p class="mb-5">@Localizer["No music discs have been loaned."]</p>
}
else
{
	<div class="table-responsive mb-5">
		<table class="table table-hover">
			<thead>
				<tr>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanMusicDiscs.First().MusicDisc!.Title)</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanMusicDiscs.First().MusicDisc!.Artist)</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanMusicDiscs.First().MusicDisc!.Version)</th>
					<th scope="col">@Html.DisplayNameFor(model => model.LoanMusicDiscs.First().MusicDisc!.EAN)</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var loanMusicDisc in Model.LoanMusicDiscs.OrderBy(lmd => lmd.MusicDisc!.Title))
				{
					<tr>
						<td>@Html.DisplayFor(model => loanMusicDisc.MusicDisc!.Title)</td>
						<td>@Html.DisplayFor(model => loanMusicDisc.MusicDisc!.Artist)</td>
						<td>@Html.DisplayFor(model => loanMusicDisc.MusicDisc!.Version)</td>
						<td>@Html.DisplayFor(model => loanMusicDisc.MusicDisc!.EAN)</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

<form asp-controller="Loans" asp-action="ConfirmDelete" asp-route-id="@Model.ID" method="get" id="delete-loan-form">
</form>
</div>

@section Scripts {
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
			const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
		});
	</script>
}
