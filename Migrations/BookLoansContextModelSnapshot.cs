// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using library_management_system.Infrastructure;

#nullable disable

namespace library_management_system.Migrations
{
    [DbContext(typeof(BookLoansContext))]
    partial class BookLoansContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("library_management_system.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN_10")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN_13")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("library_management_system.Models.Loan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Loan", (string)null);
                });

            modelBuilder.Entity("library_management_system.Models.LoanBook", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoanID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("BookID");

                    b.HasIndex("LoanID");

                    b.ToTable("LoanBook", (string)null);
                });

            modelBuilder.Entity("library_management_system.Models.LoanMovie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoanID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("LoanID");

                    b.HasIndex("MovieID");

                    b.ToTable("LoanMovie", (string)null);
                });

            modelBuilder.Entity("library_management_system.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<string>("EAN")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("library_management_system.Models.LoanBook", b =>
                {
                    b.HasOne("library_management_system.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("library_management_system.Models.Loan", null)
                        .WithMany("LoanBooks")
                        .HasForeignKey("LoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("library_management_system.Models.LoanMovie", b =>
                {
                    b.HasOne("library_management_system.Models.Loan", null)
                        .WithMany("LoanMovies")
                        .HasForeignKey("LoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("library_management_system.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("library_management_system.Models.Loan", b =>
                {
                    b.Navigation("LoanBooks");

                    b.Navigation("LoanMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
